using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DevExpress.DataAccess.Sql;

namespace DXApplication5
{
    public partial class homeGV : DevExpress.XtraEditors.XtraForm
    {
        public string name;
        public string username;
        public homeGV(string x, string y)
        {

            InitializeComponent();
            this.name = y;
            this.username = x;
            hello.Text = "Xin chào, " + this.name;


            DataSet year_list = new DataSet();
            try
            {
                Models.NAMHOC list = new Models.NAMHOC("64545454");
                year_list = list.getYearList();
            }
            catch { year_list = null; }
            if (year_list != null)
                foreach (DataRow i in year_list.Tables[0].Rows)
                {
                    lbSchoolYear.Properties.Items.Add(i["NamHoc"].ToString());
                }


            // This line of code is generated by Data Source Configuration Wizard



            // This line of code is generated by Data Source Configuration Wizard

            // This line of code is generated by Data Source Configuration Wizard
            // This line of code is generated by Data Source Configuration Wizard
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously

            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously

            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously
            sqlDataSource5.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard

            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously
            sqlDataSource6.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            lopTableAdapter1.Fill(qldt2019DataSet91.LOP);
            // This line of code is generated by Data Source Configuration Wizard
        }

        private void changeInfo(object sender, EventArgs e)
        {
            fChangeInfo x = new fChangeInfo(username);
            x.ShowDialog();

        }


        private void simpleButton1_Click(object sender, EventArgs e)
        {
            this.Hide();
            login lg = new login();
            lg.Show();
        }

        private void xtraTabControl1_Click(object sender, EventArgs e)
        {

        }

        private void ScoreYear_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void homeGV_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'qldt2019DataSet2.DEMO_GRID' table. You can move, or remove it, as needed.
            // TODO: This line of code loads data into the 'qldt2019DataSet1.KQHT' table. You can move, or remove it, as needed.

        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton1_Click_1(object sender, EventArgs e)
        {
            kqhtTableAdapter1.Update(this.kqht_final1.KQHT);
        }

        private void gridControl1_FocusedViewChanged(object sender, DevExpress.XtraGrid.ViewFocusEventArgs e)
        {

        }

        private void btEnterScore_Click(object sender, EventArgs e)
        {

        }

        private void fillByToolStripButton_Click(object sender, EventArgs e)
        {


        }

        private void gridControl1_Click_1(object sender, EventArgs e)
        {

        }

        private void gridControl1_Click_2(object sender, EventArgs e)
        {

        }

        // This event is generated by Data Source Configuration Wizard
        void unboundSource1_ValueNeeded(object sender, DevExpress.Data.UnboundSourceValueNeededEventArgs e)
        {

            // Handle this event to obtain data from your data source
            // e.Value = something /* TODO: Assign the real data here.*/
        }

        // This event is generated by Data Source Configuration Wizard
        void unboundSource1_ValuePushed(object sender, DevExpress.Data.UnboundSourceValuePushedEventArgs e)
        {

            // Handle this event to save modified data back to your data source
            // something = e.Value; /* TODO: Propagate the value into the storage.*/
        }

        private void gridControl1_Click_3(object sender, EventArgs e)
        {
        }




        private void maHSToolStripLabel_Click(object sender, EventArgs e)
        {

        }


        private void fillBy3ToolStripButton_Click(object sender, EventArgs e)
        {


        }

        private void labelControl1_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            try
            {
                this.kqhtTableAdapter1.FillBy3(this.kqht_final1.KQHT, lbSchoolYear.Text, lbEnterClass.Text);
            }
            catch (System.Exception ex)
            {
                System.Windows.Forms.MessageBox.Show(ex.Message);
            }
        }

        private void xtraTabPage1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void xtraTabPage2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void xtraTabPage4_Paint(object sender, PaintEventArgs e)
        {

        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            try
            {
                this.hocsinhTableAdapter2.FillBy(this.qldt2019DataSet111.HOCSINH, searchClass.Text);
            }
            catch (System.Exception ex)
            {
                System.Windows.Forms.MessageBox.Show(ex.Message);
            }

            string siso = "";
            try
            {
                Models.LOPHOC x = new Models.LOPHOC(searchClass.Text);
                siso = x.getClassSiso();
            }
            catch
            {
                siso = "0";
            }
            lbClassSiSo.Text = siso;

            DataSet r1 = new DataSet();
            try
            {
                Models.LOPHOC y = new Models.LOPHOC(searchClass.Text);
                r1 = y.getClassGVCN();
            }
            catch
            {
                r1 = null;
            }

            if (r1.Tables[0].Rows.Count > 0)
            {
                lbClassName.Text = r1.Tables[0].Rows[0][0].ToString();
                lbClassGVCN.Text = r1.Tables[0].Rows[0][1].ToString();
                lbClassSDTGV.Text = r1.Tables[0].Rows[0][2].ToString();
               
            }

            DataSet r2 = new DataSet();
            try
            {
                Models.LOPHOC y = new Models.LOPHOC(searchClass.Text);
                r2 = y.getClassLoptruong();
            }
            catch
            {
                r2 = null;
            }

            if (r2.Tables[0].Rows.Count > 0)
            {
                lbClassHS.Text = r2.Tables[0].Rows[0][0].ToString();
                lbClassSDTHS.Text = r2.Tables[0].Rows[0][1].ToString();
  

            }

        }
    

        private void gridControl3_Click(object sender, EventArgs e)
        {

        }

        private void gridControl3_Click_1(object sender, EventArgs e)
        {

        }

        private void fillByToolStripButton_Click_1(object sender, EventArgs e)
        {


        }

        private void gridControl3_Click_2(object sender, EventArgs e)
        {

        }

        private void fillBy1ToolStripButton_Click(object sender, EventArgs e)
        {


        }

        private void fillByToolStripButton_Click_2(object sender, EventArgs e)
        {

        }
    }
}