using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;

namespace DXApplication5
{
    public partial class homeQTV : DevExpress.XtraEditors.XtraForm
    {
        public string name;
        public string username;
        public int i = 0;
        public int editInfo = 0;
        public int editPass = 0;
        public homeQTV(string x, string y)
        {
            InitializeComponent();
            this.name = y;
            this.username = x;
            hello.Text = "Xin chào, " + this.name;

            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            this.Hide();
            login lg = new login();
            lg.Show();
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void changeInfo(object sender, EventArgs e)
        {
            fChangeInfo x = new fChangeInfo(username);
            x.ShowDialog();

        }

        private void labelControl1_Click(object sender, EventArgs e)
        {

        }

        private void comboBoxEdit1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void btGenPassword_Click(object sender, EventArgs e)
        {
            boxPassword.Text = boxUsername.Text;
        }

        private void btDelete_Click(object sender, EventArgs e)
        {
            boxUsername.Text = "";
            boxPassword.Text = "";
            boxName.Text = "";
            boxSDT.Text = "";
            boxEmail.Text = "";
            boxType.Text = "---Hãy chọn---";
        }

        private void btCreate_Click(object sender, EventArgs e)
        {
            int check = 0;
            if (boxType.Text == "---Hãy chọn---") { check++; lbErrType.Text = "* LOẠI TÀI KHOẢN không được để trống"; }
            if (boxUsername.Text == "") { check++; lbErrUsername.Text = "* TÊN TÀI KHOẢN không được để trống"; }
            if (boxPassword.Text == "") { check++; lbErrPassword.Text = "* MẬT KHẨU không được để trống"; }
            if (check > 0) return;

            if (XtraMessageBox.Show("Bạn có muốn tạo tài khoản " + boxType.Text.ToUpper() + " có username là \"" + boxUsername.Text + "\" ?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                return;

            try
            {
                string itype = "";
                if (boxType.Text == "Quản trị viên") itype = "QTV";
                if (boxType.Text == "Giáo viên") itype = "GV";
                if (boxType.Text == "Văn phòng trường") itype = "VPT";


                Models.createInfo x = new Models.createInfo(boxUsername.Text, boxPassword.Text.GetHashCode().ToString(), itype, boxName.Text, boxSDT.Text, boxEmail.Text);
                check = x.create();
            }
            catch
            { check = 0; }

            if (check == 0) { XtraMessageBox.Show("Username đã tồn tại trên hệ thống."); return; }

            XtraMessageBox.Show("Tạo mới thành công.");

            boxUsername.Text = "";
            boxPassword.Text = "";
            boxName.Text = "";
            boxSDT.Text = "";
            boxEmail.Text = "";
            boxType.Text = "---Hãy chọn---";
        }

        private void labelControl1_Click_1(object sender, EventArgs e)
        {

        }

        private void textEdit1_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void simpleButton1_Click_1(object sender, EventArgs e)
        {
            i = 0;
            lbDelType.Text = "";
            lbDelUsername.Text = "";
            lbDelName.Text = "";
            lbDelSDT.Text = "";
            lbDelEmail.Text = "";
            DataSet x = new DataSet();
            try
            {
                Models.GetInfo info = new Models.GetInfo(delUsername.Text);
                x= info.getDelInfo();
            }
            catch { x=null; }

            if (x == null) { XtraMessageBox.Show("Không thể truy vấn"); return; }
            if  (x.Tables[0].Rows.Count==0) { XtraMessageBox.Show("Tài khoản không tồn tại"); return; }

            string itype = x.Tables[0].Rows[0]["PhanQuyen"].ToString();
            if (itype == "QTV") lbDelType.Text = "Quản trị viên";
            if (itype == "GV") lbDelType.Text = "Giáo viên";
            if (itype == "VPT") lbDelType.Text = "Văn phòng trường";
            lbDelUsername.Text = delUsername.Text;
            lbDelName.Text= x.Tables[0].Rows[0]["HoTen"].ToString();
            lbDelSDT.Text = x.Tables[0].Rows[0]["SDT"].ToString();
            lbDelEmail.Text = x.Tables[0].Rows[0]["email"].ToString();
            i = 1;
        }

        private void simpleButton1_Click_2(object sender, EventArgs e)
        {
            if (i==0) { XtraMessageBox.Show("Hãy kiểm tra trước khi xóa."); return; }
            if (XtraMessageBox.Show("Bạn có muốn xóa tài khoản có username là \"" + lbDelUsername.Text + "\" ?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                return;

            string itype = "";
            if (delUsername.Text == "Quản trị viên") itype = "QTV";
            if (delUsername.Text == "Giáo viên") itype = "GV";
            if (delUsername.Text == "Văn phòng trường") itype = "VPT";


            int check;
            try
            {


                Models.GetInfo x = new Models.GetInfo(lbDelUsername.Text);
                check = x.delete();
            }
            catch
            { check = 0; }
            XtraMessageBox.Show("Xóa thành công.");
            i = 0;

        }

        private void labelControl2_Click(object sender, EventArgs e)
        {


        }

        private void xtraTabPage3_Paint(object sender, PaintEventArgs e)
        {

        }

        private void panelControl1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void homeQTV_Load(object sender, EventArgs e)
        {

        }

        private void labelControl5_Click(object sender, EventArgs e)
        {

        }

        private void btCheckEdit_Click(object sender, EventArgs e)
        {
            editInfo = 0;
            editPass = 0;
            boxCheckUsername.Text = "";
            boxCheckName.Text = "";
            boxCheckSDT.Text = "";
            boxCheckType.Text = "";
            boxCheckEmail.Text = "";

            DataSet x = new DataSet();
            try
            {
                Models.GetInfo info = new Models.GetInfo(boxEditUsername.Text);
                x = info.getDelInfo();
            }
            catch { x = null; }

            if (x == null) { XtraMessageBox.Show("Không thể truy vấn"); return; }
            if (x.Tables[0].Rows.Count == 0) { XtraMessageBox.Show("Tài khoản không tồn tại"); return; }

            string itype = x.Tables[0].Rows[0]["PhanQuyen"].ToString();
            if (itype == "QTV") boxCheckType.Text = "Quản trị viên";
            if (itype == "GV") boxCheckType.Text = "Giáo viên";
            if (itype == "VPT") boxCheckType.Text = "Văn phòng trường";
            boxCheckUsername.Text = boxEditUsername.Text;
            boxCheckName.Text = x.Tables[0].Rows[0]["HoTen"].ToString();
            boxCheckSDT.Text = x.Tables[0].Rows[0]["SDT"].ToString();
            boxCheckEmail.Text = x.Tables[0].Rows[0]["email"].ToString();
            editInfo = 1;
            editPass = 1; 
        }

        private void btResetPassword_Click(object sender, EventArgs e)
        {
            if (editPass == 0) { XtraMessageBox.Show("Hãy kiểm tra trước khi reset."); return; }
            if (XtraMessageBox.Show("Bạn có muốn reset tài khoản có username là \"" + boxEditUsername.Text + "\" ?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                return;
            int check = 0;
            try
            {
                Models.updateInfo x = new Models.updateInfo(boxEditUsername.Text, boxEditUsername.Text.GetHashCode().ToString());
                check = x.PW();
            }
            catch
            { check = 0; }

            if (check==1) XtraMessageBox.Show("Reset mật khẩu thành công.");

            boxCheckUsername.Text = "";
            boxCheckSDT.Text = "";
            boxCheckName.Text = "";
            boxCheckEmail.Text = "";
            boxCheckType.Text = "---Hãy chọn---";
            editInfo = 0;
            editPass = 0;
        }

        private void btUpdate_Click(object sender, EventArgs e)
        {
            if (editInfo == 0) { XtraMessageBox.Show("Hãy kiểm tra trước khi reset."); return; }
            if (XtraMessageBox.Show("Bạn có muốn chỉnh sửa thông tin tài khoản có username là \"" + boxEditUsername.Text + "\" ?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                return;
            int check = 0;


            string itype = "";
            if (boxCheckType.Text == "Quản trị viên") itype = "QTV";
            if (boxCheckType.Text == "Giáo viên") itype = "GV";
            if (boxCheckType.Text == "Văn phòng trường") itype = "VPT";
            if (boxCheckType.Text == "---Hãy chọn---") { XtraMessageBox.Show("Loại tài khoản chưa đúng."); return; }

            try
            {
                Models.createInfo x = new Models.createInfo(boxEditUsername.Text,itype,boxCheckName.Text, boxCheckSDT.Text, boxCheckEmail.Text);
                check = x.updateInfo();
            }
            catch
            { check = 0; }

            if (check == 1) XtraMessageBox.Show("Chỉnh sửa thành công.");

            boxCheckUsername.Text = "";
            boxCheckSDT.Text = "";
            boxCheckName.Text = "";
            boxCheckEmail.Text = "";
            boxCheckType.Text = "---Hãy chọn---";
            editInfo = 0;
            editPass = 0;
        }

        private void xtraTabControl1_Click(object sender, EventArgs e)
        {
            
        }

        private void simpleButton1_Click_3(object sender, EventArgs e)
        {
            sqlDataSource1.FillAsync();
            gridControl1.RefreshDataSource();
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }

        private void boxName_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void creatAccount_Paint(object sender, PaintEventArgs e)
        {

        }
    }
}
